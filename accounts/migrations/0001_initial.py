# Generated by Django 3.0.6 on 2020-06-08 20:40

import accounts.managers
import accounts.models
import accounts.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=accounts.models.generate_code_user, editable=False, primary_key=True, serialize=False, verbose_name='Código')),
                ('document', models.CharField(max_length=10, unique=True, validators=[accounts.validators.DNIValidator()], verbose_name='Cédula')),
                ('first_name', models.CharField(max_length=30, validators=[accounts.validators.NameValidator()], verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=150, validators=[accounts.validators.NameValidator()], verbose_name='Apellidos')),
                ('phone_number', models.CharField(max_length=17, validators=[accounts.validators.PhoneValidator()])),
                ('email', models.EmailField(max_length=254, verbose_name='Correo electronico')),
                ('address1', models.CharField(max_length=1024, verbose_name='Dirección 1')),
                ('address2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Dirección 2')),
                ('birthdate', models.DateField(verbose_name='Fecha de nacimiento')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'empleado'), (2, 'cliente')], verbose_name='Tipo de usuario')),
                ('can_approve', models.BooleanField(default=False, verbose_name='Puede aprobar')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si este usuario debe ser tratado como activo.\nSeleccione esto en lugar de eliminar cuentas.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('can_approve', True), ('user_type', 1)), models.Q(('can_approve', False), ('user_type__in', (1, 2))), _connector='OR'), name='can_approve_only_employee'),
        ),
    ]
